name: tests core 10

on:
  push:
  pull_request:
  schedule:
    - cron: '56 4 * * *'

jobs:
  testsuite:
    name: all tests with core v10
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # php-version: [ '7.2', '7.3', '7.4']
        # @todo Limited to 7.4 because of dev dependency not capable with lower php versions
        php-version: [ '7.4']
    env:
      DB_DATABASE: typo3
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: none
          tools: composer:v2.4

      - name: "Prepare composer dependencies"
        run: "Build/Scripts/composer-for-core-version.sh 10"

      - name: "Run TypoScript lint"
        run: "composer lint:typoscript"

      - name: "Run PHP lint"
        run: "composer lint:php"

      - name: "Verify code cgl"
        run: "composer cs:check"

# @todo Disabled because of PHPStan errors - tricky to handle properly agaist wide range of core versions. Tackle
#       after branching and minimizing version range.
#      - name: "Run PHPStan"
#        run: "composer analyze:php"

      - name: "Unit tests"
        run: "composer test:php:unit"

# @todo Functional tests disabled for now - testing against real DeepL API needs an API key. Testing against live API
#       should be rethinked and tackled otherwise, e.g. using https://github.com/DeepLcom/deepl-mock. The DeepL php
#       API client also uses this mockserver for testing - maybe it is usable.
#
#      - name: "Start MySQL"
#        run: "sudo /etc/init.d/mysql start"
#
#      - name: "Functional tests"
#        run: |
#          export typo3DatabaseName="$DB_DATABASE";
#          export typo3DatabaseHost="$DB_HOST";
#          export typo3DatabaseUsername="$DB_USER";
#          export typo3DatabasePassword="$DB_PASSWORD";
#          composer test:php:functional
